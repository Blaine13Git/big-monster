2020-05-22 10:25:05,598 INFO com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener [main] 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2020-05-22 10:25:05,604 INFO com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener [main] Dubbo Config was overridden by externalized configuration {dubbo.application.author=muyi, dubbo.application.name=big-monster, dubbo.consumer.timeout=5000, dubbo.monitor.protocol=registry, dubbo.protocol.name=dubbo, dubbo.protocol.port=20880, dubbo.provider.cluster=failover, dubbo.provider.delay=-1, dubbo.provider.dispatcher=message, dubbo.provider.retries=0, dubbo.provider.threads=300, dubbo.provider.timeout=5000, dubbo.registry.address=47.99.2.51:2181,47.99.2.51:2182,47.99.2.51:2183}
2020-05-22 10:25:10,761 WARN org.springframework.boot.StartupInfoLogger [main] InetAddress.getLocalHost().getHostName() took 5004 milliseconds to respond. Please verify your network configuration (macOS machines may need to add entries to /etc/hosts).
2020-05-22 10:25:15,773 INFO org.springframework.boot.StartupInfoLogger [main] Starting BigMonsterApplication on MacBook-Pro-2.local with PID 94121 (/Users/changfeng/work/code/big-monster/monster-web/target/classes started by changfeng in /Users/changfeng/work/code/big-monster)
2020-05-22 10:25:15,774 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-05-22 10:25:17,026 WARN org.mybatis.logging.Logger [main] No MyBatis mapper was found in '[com.muyi.bigMonster.mapper]' package. Please check your configuration.
2020-05-22 10:25:17,169 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$9f93ecac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:25:17,236 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.ggj.platform.gsf.monitor.config.GsfMonitorFilterAutoConfiguration' of type [com.ggj.platform.gsf.monitor.config.GsfMonitorFilterAutoConfiguration$$EnhancerBySpringCGLIB$$4e7722d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:25:17,283 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'xconfClientConfiguration' of type [com.muyi.bigMonster.config.XconfClientConfiguration$$EnhancerBySpringCGLIB$$88fcb6ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:25:17,361 INFO com.ggj.platform.xconf.client.entry.connection.XconfClient [main] sqlite存储目录为:/Users/changfeng/.xconf
2020-05-22 10:25:17,470 INFO com.ggj.platform.xconf.client.store.persistence.SqliteStoreHelper [main] 初始化表成功(如果表存在,不会重新创建)
2020-05-22 10:25:22,819 INFO com.ggj.platform.xconf.client.netty.channel.ServerChannelHolder [main] connect 120.55.196.18:16520 server success
2020-05-22 10:25:22,823 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client->server 通道连接成功
2020-05-22 10:25:22,959 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageEncoder [XconfClient-NioEventLoopGroup-pool-0] 发送的数据包大小为:95
2020-05-22 10:25:22,982 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageDecoder [XconfClient-NioEventLoopGroup-pool-0] 接受的数据包大小为:483
2020-05-22 10:25:23,151 INFO com.ggj.platform.xconf.client.netty.sync.ClientSyncData [main] await sync done
2020-05-22 10:25:23,151 INFO com.ggj.platform.xconf.client.netty.sync.ClientSyncData$1 [XconfClient-NioEventLoopGroup-pool-0] await sync complete
2020-05-22 10:25:23,151 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client send msg:null
2020-05-22 10:25:23,151 INFO com.ggj.platform.xconf.client.netty.NettyClient [main] 同步数据结果:true
2020-05-22 10:25:23,170 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:25:23,173 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:25:23,176 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:25:23,177 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:25:23,179 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:25:23,180 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:25:23,858 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9999 (http)
2020-05-22 10:25:23,873 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9999"]
2020-05-22 10:25:23,874 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-05-22 10:25:23,874 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-22 10:25:24,008 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-05-22 10:25:24,008 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 8105 ms
2020-05-22 10:25:26,156 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageEncoder [XconfClient-NioEventLoopGroup-pool-0] 发送的数据包大小为:95
2020-05-22 10:25:26,163 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageDecoder [XconfClient-NioEventLoopGroup-pool-0] 接受的数据包大小为:118
2020-05-22 10:25:26,166 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client send msg:null
2020-05-22 10:25:34,922 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-05-22 10:25:35,220 ERROR com.zaxxer.hikari.HikariConfig [main] Failed to load driver class com.mysql.cj.jdbc.Driver from HikariConfig class classloader sun.misc.Launcher$AppClassLoader@18b4aac2
2020-05-22 10:25:35,227 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under '' to com.zaxxer.hikari.HikariDataSource
2020-05-22 10:25:35,229 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-05-22 10:25:35,229 WARN com.ggj.platform.xconf.client.entry.connection.XconfClient [main] xconfClient destory
2020-05-22 10:25:35,232 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-05-22 10:25:35,243 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-05-22 10:25:35,248 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under '' to com.zaxxer.hikari.HikariDataSource:

    Property: driver-class-name
    Value: com.mysql.cj.jdbc.Driver
    Origin: "driverClassName" from property source "source"
    Reason: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader

Action:

Update your application's configuration

2020-05-22 10:25:35,254 WARN org.springframework.boot.SpringApplication [main] Unable to close ApplicationContext
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:245)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:197)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:134)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.availability.AvailabilityChangeEvent.publish(AvailabilityChangeEvent.java:81)
	at org.springframework.boot.availability.AvailabilityChangeEvent.publish(AvailabilityChangeEvent.java:67)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:814)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.muyi.bigMonster.BigMonsterApplication.main(BigMonsterApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:94)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:76)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 28 common frames omitted
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:814)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1282)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:297)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor.postProcessBeforeInitialization(ConfigurationClassPostProcessor.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 51 common frames omitted
2020-05-22 10:25:35,259 WARN com.ggj.platform.xconf.client.netty.NettyClient [Thread-206] client socket close
2020-05-22 10:25:35,259 WARN com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client->server 通道断开了
2020-05-22 10:26:43,913 INFO com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener [main] 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2020-05-22 10:26:43,918 INFO com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener [main] Dubbo Config was overridden by externalized configuration {dubbo.application.author=muyi, dubbo.application.name=big-monster, dubbo.consumer.timeout=5000, dubbo.registry.address=47.99.2.51:2181,47.99.2.51:2182,47.99.2.51:2183}
2020-05-22 10:26:48,980 WARN org.springframework.boot.StartupInfoLogger [main] InetAddress.getLocalHost().getHostName() took 5003 milliseconds to respond. Please verify your network configuration (macOS machines may need to add entries to /etc/hosts).
2020-05-22 10:26:53,989 INFO org.springframework.boot.StartupInfoLogger [main] Starting BigMonsterApplication on MacBook-Pro-2.local with PID 94182 (/Users/changfeng/work/code/big-monster/monster-web/target/classes started by changfeng in /Users/changfeng/work/code/big-monster)
2020-05-22 10:26:53,990 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-05-22 10:26:54,595 WARN org.mybatis.logging.Logger [main] No MyBatis mapper was found in '[com.muyi.bigMonster.mapper]' package. Please check your configuration.
2020-05-22 10:26:54,688 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$d8a66796] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:26:54,719 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.ggj.platform.gsf.monitor.config.GsfMonitorFilterAutoConfiguration' of type [com.ggj.platform.gsf.monitor.config.GsfMonitorFilterAutoConfiguration$$EnhancerBySpringCGLIB$$87899dbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:26:54,747 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'xconfClientConfiguration' of type [com.muyi.bigMonster.config.XconfClientConfiguration$$EnhancerBySpringCGLIB$$c20f31d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:26:54,784 INFO com.ggj.platform.xconf.client.entry.connection.XconfClient [main] sqlite存储目录为:/Users/changfeng/.xconf
2020-05-22 10:26:54,849 INFO com.ggj.platform.xconf.client.store.persistence.SqliteStoreHelper [main] 初始化表成功(如果表存在,不会重新创建)
2020-05-22 10:27:00,008 INFO com.ggj.platform.xconf.client.netty.channel.ServerChannelHolder [main] connect 120.55.196.18:16520 server success
2020-05-22 10:27:00,009 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client->server 通道连接成功
2020-05-22 10:27:00,075 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageEncoder [XconfClient-NioEventLoopGroup-pool-0] 发送的数据包大小为:95
2020-05-22 10:27:00,116 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageDecoder [XconfClient-NioEventLoopGroup-pool-0] 接受的数据包大小为:118
2020-05-22 10:27:00,200 INFO com.ggj.platform.xconf.client.netty.sync.ClientSyncData$1 [XconfClient-NioEventLoopGroup-pool-0] await sync complete
2020-05-22 10:27:00,200 INFO com.ggj.platform.xconf.client.netty.sync.ClientSyncData [main] await sync done
2020-05-22 10:27:00,201 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client send msg:null
2020-05-22 10:27:00,201 INFO com.ggj.platform.xconf.client.netty.NettyClient [main] 同步数据结果:true
2020-05-22 10:27:00,216 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:27:00,218 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:27:00,219 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 10:27:00,519 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9999 (http)
2020-05-22 10:27:00,527 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9999"]
2020-05-22 10:27:00,527 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-05-22 10:27:00,527 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-22 10:27:00,659 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-05-22 10:27:00,660 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 6597 ms
2020-05-22 10:27:03,204 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageEncoder [XconfClient-NioEventLoopGroup-pool-0] 发送的数据包大小为:95
2020-05-22 10:27:03,231 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageDecoder [XconfClient-NioEventLoopGroup-pool-0] 接受的数据包大小为:118
2020-05-22 10:27:03,233 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client send msg:null
2020-05-22 10:27:11,234 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-05-22 10:27:11,407 ERROR com.zaxxer.hikari.HikariConfig [main] Failed to load driver class com.mysql.cj.jdbc.Driver from HikariConfig class classloader sun.misc.Launcher$AppClassLoader@18b4aac2
2020-05-22 10:27:11,411 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under '' to com.zaxxer.hikari.HikariDataSource
2020-05-22 10:27:11,411 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-05-22 10:27:11,412 WARN com.ggj.platform.xconf.client.entry.connection.XconfClient [main] xconfClient destory
2020-05-22 10:27:11,415 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-05-22 10:27:11,423 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-05-22 10:27:11,427 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under '' to com.zaxxer.hikari.HikariDataSource:

    Property: driver-class-name
    Value: com.mysql.cj.jdbc.Driver
    Origin: "driverClassName" from property source "source"
    Reason: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader

Action:

Update your application's configuration

2020-05-22 10:27:11,440 WARN org.springframework.boot.SpringApplication [main] Unable to close ApplicationContext
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:245)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:197)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:134)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.availability.AvailabilityChangeEvent.publish(AvailabilityChangeEvent.java:81)
	at org.springframework.boot.availability.AvailabilityChangeEvent.publish(AvailabilityChangeEvent.java:67)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:814)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.muyi.bigMonster.BigMonsterApplication.main(BigMonsterApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:94)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:76)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 28 common frames omitted
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:814)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1282)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:297)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor.postProcessBeforeInitialization(ConfigurationClassPostProcessor.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 51 common frames omitted
2020-05-22 10:27:11,470 WARN com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client->server 通道断开了
2020-05-22 10:27:11,473 WARN com.ggj.platform.xconf.client.netty.NettyClient [Thread-205] client socket close
2020-05-22 12:54:15,702 INFO com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener [main] 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2020-05-22 12:54:15,707 INFO com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener [main] Dubbo Config was overridden by externalized configuration {dubbo.application.author=muyi, dubbo.application.name=big-monster, dubbo.consumer.timeout=5000, dubbo.registry.address=47.99.2.51:2181,47.99.2.51:2182,47.99.2.51:2183}
2020-05-22 12:54:20,793 WARN org.springframework.boot.StartupInfoLogger [main] InetAddress.getLocalHost().getHostName() took 5001 milliseconds to respond. Please verify your network configuration (macOS machines may need to add entries to /etc/hosts).
2020-05-22 12:54:25,796 INFO org.springframework.boot.StartupInfoLogger [main] Starting BigMonsterApplication on MacBook-Pro-2.local with PID 97896 (/Users/changfeng/work/code/big-monster/monster-web/target/classes started by changfeng in /Users/changfeng/work/code/big-monster)
2020-05-22 12:54:25,798 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-05-22 12:54:26,512 WARN org.mybatis.logging.Logger [main] No MyBatis mapper was found in '[com.muyi.bigMonster.mapper]' package. Please check your configuration.
2020-05-22 12:54:26,598 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$b0222575] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 12:54:26,640 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.ggj.platform.gsf.monitor.config.GsfMonitorFilterAutoConfiguration' of type [com.ggj.platform.gsf.monitor.config.GsfMonitorFilterAutoConfiguration$$EnhancerBySpringCGLIB$$5f055b9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 12:54:26,672 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'xconfClientConfiguration' of type [com.muyi.bigMonster.config.XconfClientConfiguration$$EnhancerBySpringCGLIB$$998aefb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 12:54:26,717 INFO com.ggj.platform.xconf.client.entry.connection.XconfClient [main] sqlite存储目录为:/Users/changfeng/.xconf
2020-05-22 12:54:26,793 INFO com.ggj.platform.xconf.client.store.persistence.SqliteStoreHelper [main] 初始化表成功(如果表存在,不会重新创建)
2020-05-22 12:54:32,086 INFO com.ggj.platform.xconf.client.netty.channel.ServerChannelHolder [main] connect 120.55.196.18:16520 server success
2020-05-22 12:54:32,088 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client->server 通道连接成功
2020-05-22 12:54:32,158 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageEncoder [XconfClient-NioEventLoopGroup-pool-0] 发送的数据包大小为:95
2020-05-22 12:54:32,176 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageDecoder [XconfClient-NioEventLoopGroup-pool-0] 接受的数据包大小为:118
2020-05-22 12:54:32,266 INFO com.ggj.platform.xconf.client.netty.sync.ClientSyncData [main] await sync done
2020-05-22 12:54:32,266 INFO com.ggj.platform.xconf.client.netty.sync.ClientSyncData$1 [XconfClient-NioEventLoopGroup-pool-0] await sync complete
2020-05-22 12:54:32,267 INFO com.ggj.platform.xconf.client.netty.NettyClient [main] 同步数据结果:true
2020-05-22 12:54:32,267 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client send msg:null
2020-05-22 12:54:32,280 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 12:54:32,281 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 12:54:32,282 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 12:54:32,638 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9999 (http)
2020-05-22 12:54:32,649 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9999"]
2020-05-22 12:54:32,650 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-05-22 12:54:32,650 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-22 12:54:32,771 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-05-22 12:54:32,771 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 6897 ms
2020-05-22 12:54:35,269 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageEncoder [XconfClient-NioEventLoopGroup-pool-0] 发送的数据包大小为:95
2020-05-22 12:54:35,333 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageDecoder [XconfClient-NioEventLoopGroup-pool-0] 接受的数据包大小为:118
2020-05-22 12:54:35,336 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client send msg:null
2020-05-22 12:54:43,547 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-05-22 12:54:43,775 ERROR com.zaxxer.hikari.HikariConfig [main] Failed to load driver class com.mysql.cj.jdbc.Driver from HikariConfig class classloader sun.misc.Launcher$AppClassLoader@18b4aac2
2020-05-22 12:54:43,778 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under '' to com.zaxxer.hikari.HikariDataSource
2020-05-22 12:54:43,779 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-05-22 12:54:43,780 WARN com.ggj.platform.xconf.client.entry.connection.XconfClient [main] xconfClient destory
2020-05-22 12:54:43,783 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-05-22 12:54:43,792 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-05-22 12:54:43,795 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under '' to com.zaxxer.hikari.HikariDataSource:

    Property: driver-class-name
    Value: com.mysql.cj.jdbc.Driver
    Origin: "driverClassName" from property source "source"
    Reason: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader

Action:

Update your application's configuration

2020-05-22 12:54:43,801 WARN org.springframework.boot.SpringApplication [main] Unable to close ApplicationContext
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:245)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:197)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:134)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.availability.AvailabilityChangeEvent.publish(AvailabilityChangeEvent.java:81)
	at org.springframework.boot.availability.AvailabilityChangeEvent.publish(AvailabilityChangeEvent.java:67)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:814)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.muyi.bigMonster.BigMonsterApplication.main(BigMonsterApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:94)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:76)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 28 common frames omitted
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:814)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1282)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:297)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor.postProcessBeforeInitialization(ConfigurationClassPostProcessor.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 51 common frames omitted
2020-05-22 12:54:43,805 WARN com.ggj.platform.xconf.client.netty.NettyClient [Thread-205] client socket close
2020-05-22 12:54:43,818 WARN com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client->server 通道断开了
2020-05-22 12:55:33,515 INFO com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener [main] 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2020-05-22 12:55:33,519 INFO com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener [main] Dubbo Config was overridden by externalized configuration {dubbo.application.author=muyi, dubbo.application.name=big-monster, dubbo.consumer.timeout=5000, dubbo.registry.address=47.99.2.51:2181,47.99.2.51:2182,47.99.2.51:2183}
2020-05-22 12:55:38,576 WARN org.springframework.boot.StartupInfoLogger [main] InetAddress.getLocalHost().getHostName() took 5004 milliseconds to respond. Please verify your network configuration (macOS machines may need to add entries to /etc/hosts).
2020-05-22 12:55:43,584 INFO org.springframework.boot.StartupInfoLogger [main] Starting BigMonsterApplication on MacBook-Pro-2.local with PID 97932 (/Users/changfeng/work/code/big-monster/monster-web/target/classes started by changfeng in /Users/changfeng/work/code/big-monster)
2020-05-22 12:55:43,588 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-05-22 12:55:44,200 WARN org.mybatis.logging.Logger [main] No MyBatis mapper was found in '[com.muyi.bigMonster.mapper]' package. Please check your configuration.
2020-05-22 12:55:44,287 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$e69cf9d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 12:55:44,342 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.ggj.platform.gsf.monitor.config.GsfMonitorFilterAutoConfiguration' of type [com.ggj.platform.gsf.monitor.config.GsfMonitorFilterAutoConfiguration$$EnhancerBySpringCGLIB$$95802ff9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 12:55:44,372 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'xconfClientConfiguration' of type [com.muyi.bigMonster.config.XconfClientConfiguration$$EnhancerBySpringCGLIB$$d005c414] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 12:55:44,406 INFO com.ggj.platform.xconf.client.entry.connection.XconfClient [main] sqlite存储目录为:/Users/changfeng/.xconf
2020-05-22 12:55:44,490 INFO com.ggj.platform.xconf.client.store.persistence.SqliteStoreHelper [main] 初始化表成功(如果表存在,不会重新创建)
2020-05-22 12:55:49,630 INFO com.ggj.platform.xconf.client.netty.channel.ServerChannelHolder [main] connect 120.55.196.18:16520 server success
2020-05-22 12:55:49,631 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client->server 通道连接成功
2020-05-22 12:55:49,695 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageEncoder [XconfClient-NioEventLoopGroup-pool-0] 发送的数据包大小为:95
2020-05-22 12:55:49,711 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageDecoder [XconfClient-NioEventLoopGroup-pool-0] 接受的数据包大小为:118
2020-05-22 12:55:49,803 INFO com.ggj.platform.xconf.client.netty.sync.ClientSyncData [main] await sync done
2020-05-22 12:55:49,803 INFO com.ggj.platform.xconf.client.netty.sync.ClientSyncData$1 [XconfClient-NioEventLoopGroup-pool-0] await sync complete
2020-05-22 12:55:49,804 INFO com.ggj.platform.xconf.client.netty.NettyClient [main] 同步数据结果:true
2020-05-22 12:55:49,804 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client send msg:null
2020-05-22 12:55:49,816 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 12:55:49,818 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 12:55:49,818 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 12:55:50,173 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9999 (http)
2020-05-22 12:55:50,186 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9999"]
2020-05-22 12:55:50,186 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-05-22 12:55:50,187 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-22 12:55:50,350 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-05-22 12:55:50,350 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 6693 ms
2020-05-22 12:55:52,808 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageEncoder [XconfClient-NioEventLoopGroup-pool-0] 发送的数据包大小为:95
2020-05-22 12:55:52,823 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageDecoder [XconfClient-NioEventLoopGroup-pool-0] 接受的数据包大小为:118
2020-05-22 12:55:52,825 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client send msg:null
2020-05-22 12:56:00,941 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-05-22 12:56:01,139 ERROR com.zaxxer.hikari.HikariConfig [main] Failed to load driver class com.mysql.cj.jdbc.Driver from HikariConfig class classloader sun.misc.Launcher$AppClassLoader@18b4aac2
2020-05-22 12:56:01,142 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under '' to com.zaxxer.hikari.HikariDataSource
2020-05-22 12:56:01,143 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-05-22 12:56:01,143 WARN com.ggj.platform.xconf.client.entry.connection.XconfClient [main] xconfClient destory
2020-05-22 12:56:01,146 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-05-22 12:56:01,156 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-05-22 12:56:01,159 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under '' to com.zaxxer.hikari.HikariDataSource:

    Property: driver-class-name
    Value: com.mysql.cj.jdbc.Driver
    Origin: "driverClassName" from property source "source"
    Reason: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader

Action:

Update your application's configuration

2020-05-22 12:56:01,166 WARN org.springframework.boot.SpringApplication [main] Unable to close ApplicationContext
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:245)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:197)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:134)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.availability.AvailabilityChangeEvent.publish(AvailabilityChangeEvent.java:81)
	at org.springframework.boot.availability.AvailabilityChangeEvent.publish(AvailabilityChangeEvent.java:67)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:814)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.muyi.bigMonster.BigMonsterApplication.main(BigMonsterApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:94)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:76)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 28 common frames omitted
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:814)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1282)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:297)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor.postProcessBeforeInitialization(ConfigurationClassPostProcessor.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 51 common frames omitted
2020-05-22 12:56:01,170 WARN com.ggj.platform.xconf.client.netty.NettyClient [Thread-204] client socket close
2020-05-22 12:56:01,183 WARN com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client->server 通道断开了
2020-05-22 13:02:07,419 INFO com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener [main] 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2020-05-22 13:02:07,423 INFO com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener [main] Dubbo Config was overridden by externalized configuration {dubbo.application.author=muyi, dubbo.application.name=big-monster, dubbo.consumer.timeout=5000, dubbo.registry.address=47.99.2.51:2181,47.99.2.51:2182,47.99.2.51:2183}
2020-05-22 13:02:12,481 WARN org.springframework.boot.StartupInfoLogger [main] InetAddress.getLocalHost().getHostName() took 5006 milliseconds to respond. Please verify your network configuration (macOS machines may need to add entries to /etc/hosts).
2020-05-22 13:02:17,486 INFO org.springframework.boot.StartupInfoLogger [main] Starting BigMonsterApplication on MacBook-Pro-2.local with PID 98134 (/Users/changfeng/work/code/big-monster/monster-web/target/classes started by changfeng in /Users/changfeng/work/code/big-monster)
2020-05-22 13:02:17,487 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-05-22 13:02:18,073 WARN org.mybatis.logging.Logger [main] No MyBatis mapper was found in '[com.muyi.bigMonster.mapper]' package. Please check your configuration.
2020-05-22 13:02:18,163 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$72b27162] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 13:02:18,195 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'com.ggj.platform.gsf.monitor.config.GsfMonitorFilterAutoConfiguration' of type [com.ggj.platform.gsf.monitor.config.GsfMonitorFilterAutoConfiguration$$EnhancerBySpringCGLIB$$2195a78a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 13:02:18,227 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'xconfClientConfiguration' of type [com.muyi.bigMonster.config.XconfClientConfiguration$$EnhancerBySpringCGLIB$$5c1b3ba5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 13:02:18,265 INFO com.ggj.platform.xconf.client.entry.connection.XconfClient [main] sqlite存储目录为:/Users/changfeng/.xconf
2020-05-22 13:02:18,337 INFO com.ggj.platform.xconf.client.store.persistence.SqliteStoreHelper [main] 初始化表成功(如果表存在,不会重新创建)
2020-05-22 13:02:23,507 INFO com.ggj.platform.xconf.client.netty.channel.ServerChannelHolder [main] connect 120.55.196.18:16520 server success
2020-05-22 13:02:23,508 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client->server 通道连接成功
2020-05-22 13:02:23,574 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageEncoder [XconfClient-NioEventLoopGroup-pool-0] 发送的数据包大小为:95
2020-05-22 13:02:23,590 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageDecoder [XconfClient-NioEventLoopGroup-pool-0] 接受的数据包大小为:118
2020-05-22 13:02:23,663 INFO com.ggj.platform.xconf.client.netty.sync.ClientSyncData [main] await sync done
2020-05-22 13:02:23,663 INFO com.ggj.platform.xconf.client.netty.sync.ClientSyncData$1 [XconfClient-NioEventLoopGroup-pool-0] await sync complete
2020-05-22 13:02:23,664 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client send msg:null
2020-05-22 13:02:23,664 INFO com.ggj.platform.xconf.client.netty.NettyClient [main] 同步数据结果:true
2020-05-22 13:02:23,677 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 13:02:23,678 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 13:02:23,679 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-22 13:02:23,962 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9999 (http)
2020-05-22 13:02:23,968 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9999"]
2020-05-22 13:02:23,969 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-05-22 13:02:23,969 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-22 13:02:24,085 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-05-22 13:02:24,085 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 6529 ms
2020-05-22 13:02:26,668 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageEncoder [XconfClient-NioEventLoopGroup-pool-0] 发送的数据包大小为:95
2020-05-22 13:02:26,683 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageDecoder [XconfClient-NioEventLoopGroup-pool-0] 接受的数据包大小为:118
2020-05-22 13:02:26,685 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client send msg:null
2020-05-22 13:02:34,693 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-05-22 13:02:35,074 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-9999"]
2020-05-22 13:02:35,087 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 9999 (http) with context path '/monster'
2020-05-22 13:02:35,100 INFO org.springframework.boot.StartupInfoLogger [main] Started BigMonsterApplication in 38.034 seconds (JVM running for 43.621)
2020-05-22 13:03:11,694 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageEncoder [XconfClient-NioEventLoopGroup-pool-0] 发送的数据包大小为:147
2020-05-22 13:03:26,673 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageEncoder [XconfClient-NioEventLoopGroup-pool-0] 发送的数据包大小为:95
2020-05-22 13:03:26,681 INFO com.ggj.platform.xconf.common.protocol.codec.CommandMessageDecoder [XconfClient-NioEventLoopGroup-pool-0] 接受的数据包大小为:118
2020-05-22 13:03:26,683 INFO com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client send msg:null
2020-05-22 13:03:39,327 WARN com.ggj.platform.xconf.client.netty.handler.ClientHandler [XconfClient-NioEventLoopGroup-pool-0] client->server 通道断开了
2020-05-22 13:03:39,330 WARN com.ggj.platform.xconf.client.netty.NettyClient [Thread-204] client socket close
2020-05-22 13:03:39,355 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-05-22 13:03:39,355 WARN com.ggj.platform.xconf.client.entry.connection.XconfClient [SpringContextShutdownHook] xconfClient destory
